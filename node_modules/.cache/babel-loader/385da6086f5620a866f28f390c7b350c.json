{"remainingRequest":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/babel-loader/lib/index.js!/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/duyennguyen/STREAMING/ask-around-me/frontend/src/components/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/src/components/Question.vue","mtime":1626863039992},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kdXllbm5ndXllbi9TVFJFQU1JTkcvYXNrLWFyb3VuZC1tZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9kdXllbm5ndXllbi9TVFJFQU1JTkcvYXNrLWFyb3VuZC1tZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJIb21lVmlldyIsCiAgcHJvcHM6IFsncXVlc3Rpb24nXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgbWFwRGlhbG9nOiBmYWxzZSwKICAgICAgbWFya2VyczogW10sCiAgICAgIHN0YXJSYXRpbmc6IDAsCiAgICAgIHNhdmluZzogZmFsc2UsCiAgICAgIGN1cnJlbnRRdWVzdGlvbjogewogICAgICAgIGxhdGl0dWRlOiA0MC43MzU4MjM1LAogICAgICAgIGxvbmdpdHVkZTogLTczLjk5MjcxMDIKICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZSh7CiAgICBwb3NpdGlvbjogZnVuY3Rpb24gcG9zaXRpb24oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnBvc2l0aW9uOwogICAgfQogIH0pKSwKICBtZXRob2RzOiB7CiAgICBvcGVuRGlhbG9nOiBmdW5jdGlvbiBvcGVuRGlhbG9nKHF1ZXN0aW9uKSB7CiAgICAgIGNvbnNvbGUubG9nKHF1ZXN0aW9uKTsKICAgICAgdGhpcy5jdXJyZW50UXVlc3Rpb24gPSBxdWVzdGlvbjsKICAgICAgdGhpcy5zdGFyUmF0aW5nID0gMDsgLy8gcmVzZXQgcmF0aW5nCgogICAgICB0aGlzLmRpYWxvZyA9IHRydWU7CiAgICB9LAogICAgb3Blbk1hcERpYWxvZzogZnVuY3Rpb24gb3Blbk1hcERpYWxvZyhxdWVzdGlvbikgewogICAgICBjb25zb2xlLmxvZyhxdWVzdGlvbik7CiAgICAgIHRoaXMuY3VycmVudFF1ZXN0aW9uID0gcXVlc3Rpb247CiAgICAgIHRoaXMubWFya2VycyA9IFtdOwogICAgICB0aGlzLm1hcERpYWxvZyA9IHRydWU7CiAgICB9LAogICAgYWRkTWFya2VyOiBmdW5jdGlvbiBhZGRNYXJrZXIoZXZlbnQpIHsKICAgICAgdmFyIG1hcmtlciA9IHsKICAgICAgICBsYXQ6IGV2ZW50LmxhdExuZy5sYXQoKSwKICAgICAgICBsbmc6IGV2ZW50LmxhdExuZy5sbmcoKQogICAgICB9OwogICAgICB0aGlzLm1hcmtlcnMucG9wKCk7IC8vIE9ubHkgb25lIG1hcmtlciBhbGxvd2VkCgogICAgICB0aGlzLm1hcmtlcnMucHVzaCh7CiAgICAgICAgcG9zaXRpb246IG1hcmtlcgogICAgICB9KTsKICAgIH0sCiAgICBzdWJtaXREaWFsb2c6IGZ1bmN0aW9uIHN1Ym1pdERpYWxvZyh0eXBlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0b2tlbiwgdXJsLCBwYXlsb2FkLCBfeWllbGQkYXhpb3MkcG9zdCwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3N1Ym1pdERpYWxvZycpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGF1dGguZ2V0VG9rZW5TaWxlbnRseSgpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICB0b2tlbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICB1cmwgPSAiIi5jb25jYXQoX3RoaXMuJEFQSXVybCwgIi9hbnN3ZXJzIik7CiAgICAgICAgICAgICAgICBfdGhpcy5zYXZpbmcgPSB0cnVlOyAvLyBCdWlsZCBwYXlsb2FkIGZvciBzdGFyL2dlbyB0eXBlIHF1ZXN0aW9ucwoKICAgICAgICAgICAgICAgIHBheWxvYWQgPSB7CiAgICAgICAgICAgICAgICAgIHF1ZXN0aW9uOiBfdGhpcy5xdWVzdGlvbiwKICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZQogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gJ3N0YXInKSB7CiAgICAgICAgICAgICAgICAgIHBheWxvYWQucmF0aW5nID0gX3RoaXMuc3RhclJhdGluZzsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHBheWxvYWQubGF0ID0gX3RoaXMubWFya2Vyc1swXS5wb3NpdGlvbi5sYXQ7CiAgICAgICAgICAgICAgICAgIHBheWxvYWQubG5nID0gX3RoaXMubWFya2Vyc1swXS5wb3NpdGlvbi5sbmc7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1BheWxvYWQ6ICcsIHBheWxvYWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCh1cmwsIHBheWxvYWQsIHsKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJHBvc3QgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRwb3N0LmRhdGE7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnUmVzdWx0OiAnLCBkYXRhKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg5KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yOiAnLCBfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgICBfdGhpcy5kaWFsb2cgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzLm1hcERpYWxvZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXMuc2F2aW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgMjM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzksIDE3XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,CAJA;AAKA,MAAA,MAAA,EAAA,KALA;AAMA,MAAA,eAAA,EAAA;AACA,QAAA,QAAA,EAAA,UADA;AAEA,QAAA,SAAA,EAAA,CAAA;AAFA;AANA,KAAA;AAWA,GAfA;AAgBA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA;AAAA;AADA,GAAA,CADA,CAhBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,QADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,WAAA,eAAA,GAAA,QAAA;AACA,WAAA,UAAA,GAAA,CAAA,CAHA,CAGA;;AACA,WAAA,MAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,aAPA,yBAOA,QAPA,EAOA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,WAAA,eAAA,GAAA,QAAA;AACA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAZA;AAaA,IAAA,SAbA,qBAaA,KAbA,EAaA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,EADA;AAEA,QAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA;AAFA,OAAA;AAIA,WAAA,OAAA,CAAA,GAAA,GALA,CAKA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA;AACA,KApBA;AAqBA,IAAA,YArBA,wBAqBA,IArBA,EAqBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AADA;AAAA,uBAGA,KAAA,CAAA,KAAA,CAAA,gBAAA,EAHA;;AAAA;AAGA,gBAAA,KAHA;AAIA,gBAAA,GAJA,aAIA,KAAA,CAAA,OAJA;AAKA,gBAAA,KAAA,CAAA,MAAA,GAAA,IAAA,CALA,CAOA;;AACA,gBAAA,OARA,GAQA;AACA,kBAAA,QAAA,EAAA,KAAA,CAAA,QADA;AAEA,kBAAA,IAAA,EAAA;AAFA,iBARA;;AAaA,oBAAA,IAAA,KAAA,MAAA,EAAA;AACA,kBAAA,OAAA,CAAA,MAAA,GAAA,KAAA,CAAA,UAAA;AACA,iBAFA,MAEA;AACA,kBAAA,OAAA,CAAA,GAAA,GAAA,KAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,GAAA;AACA,kBAAA,OAAA,CAAA,GAAA,GAAA,KAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA,CAAA,GAAA;AACA;;AAEA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,OAAA;AApBA;AAAA;AAAA,uBAsBA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,OAAA,EACA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,mBAAA,KAAA;AADA;AADA,iBADA,CAtBA;;AAAA;AAAA;AAsBA,gBAAA,IAtBA,qBAsBA,IAtBA;AA4BA,gBAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,IAAA;AA5BA;AAAA;;AAAA;AAAA;AAAA;AA8BA,gBAAA,OAAA,CAAA,KAAA,CAAA,SAAA;;AA9BA;AAiCA,gBAAA,KAAA,CAAA,MAAA,GAAA,KAAA;AACA,gBAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,gBAAA,KAAA,CAAA,MAAA,GAAA,KAAA;;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA;AAzDA;AArBA,CAAA","sourcesContent":["<template>\n  <v-container class=\"pa-0 ma-0\">\n    <!-- Question card -->\n     <v-card class=\"my-2 ma-2\">\n      <v-card-text>\n        <div class=\"my-2 subtitle-1\">{{ question.question }}</div>\n\n        <!-- Readonly star rating showing aggregated score -->\n        <div v-if=\"question.type==='Star'\">\n          <v-rating :value=\"question.avgScore\" color=\"amber\" dense half-increments readonly size=\"24\"\n          ></v-rating> ({{ question.answers }} ratings)\n        </div>\n\n        <div class=\"my-4 subtitle-2\">\n          Posted <strong>{{ moment.unix(question.created/1000).fromNow() }}</strong>\n          <strong v-if=\"question.author===$store.getters.getUser.sub\"> by you</strong>\n        </div>\n      </v-card-text>\n  \n      <!-- Only show \"Answer\" button for questions asked by different user -->\n      <v-card-actions v-if=\"question.author!=$store.getters.getUser.sub\">\n\n        <!-- For star rating questions -->\n        <div v-if=\"question.type==='Star'\">\n          <v-btn text color=\"orange\" dark @click=\"openDialog(question)\">\n            Answer\n          </v-btn>\n        </div>\n\n        <!-- For geo rating questions -->\n        <div v-if=\"question.type==='Geo'\">\n          <v-btn text color=\"orange\" dark @click=\"openMapDialog(question)\">\n            Answer on map\n          </v-btn>\n          <v-btn :disabled=\"question.answers===0\" text color=\"orange\" dark :to=\"{ name: 'Answers', query: { hk: question.hashKey, rk: question.rangeKey }}\">\n            See results\n          </v-btn>\n        </div>\n\n        <!-- <v-spacer></v-spacer> -->\n      </v-card-actions>\n      <v-divider class=\"mx-4\"></v-divider> \n    </v-card> \n\n    <!-- Popup star rating dialog for answering question -->\n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"headline\">Your rating:</v-card-title>\n        <v-card-text>\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\n          <v-rating v-model=\"starRating\"\n            color=\"amber\"\n            dense\n            half-increments\n            size=\"40\"\n          ></v-rating>\n        </v-card-text>            \n        <v-card-actions> \n          <v-spacer></v-spacer>\n          <v-btn :disabled=\"starRating===0||saving===true\" color=\"success\" text @click=\"submitDialog('star')\">Submit</v-btn>\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"dialog=false\">Cancel</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Popup geo rating dialog for answering question -->\n    <v-dialog v-model=\"mapDialog\" persistent>\n      <v-card>\n        <v-card-title class=\"headline\">Drop a pin on your answer:</v-card-title>\n        <v-card-text>\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\n          <GmapMap\n            ref=\"gmap\"\n            :center=\"{lat:this.position.latitude, lng:this.position.longitude}\"\n            :zoom=\"7\"\n            map-type-id=\"roadmap\"\n            style=\"width: 100%; height: 400px\"\n            \n            :options=\"{\n              zoomControl: false,\n              zoom: 11,\n              mapTypeControl: false,\n              scaleControl: false,\n              streetViewControl: false,\n              rotateControl: false,\n              fullscreenControl: false,\n              disableDefaultUI: false\n            }\"\n          > \n            <GmapMarker\n              :key=\"index\"\n              v-for=\"(m, index) in markers\"\n              :position=\"m.position\"\n              @click=\"center=m.position\"\n            ></GmapMarker>    \n            <GmapCircle\n              :center=\"{lat:this.currentQuestion.latitude, lng:this.currentQuestion.longitude}\"\n              :radius=\"8000\"\n              @click=\"addMarker\"\n              :options=\"{\n                fillColor:'blue',\n                fillOpacity:0.1,\n                strokeColor: '#0000FF',\n                strokeOpacity: 0.2,\n                strokeWeight: 5\n              }\"\n            />\n          </GmapMap>     \n        </v-card-text>            \n        <v-card-actions> \n          <v-spacer></v-spacer>\n          <v-btn :disabled=\"markers.length===0||saving===true\" color=\"success\" text @click=\"submitDialog('geo')\">Submit</v-btn>\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"mapDialog=false\">Cancel</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport { mapState } from 'vuex'\n\nexport default {\n  name: \"HomeView\",\n  props: ['question'],\n  data: function () {   \n    return {\n      dialog: false,\n      mapDialog: false,\n      markers: [],\n      starRating: 0,\n      saving: false,\n      currentQuestion: {\n        latitude: 40.7358235,\n        longitude: -73.9927102,\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      position: (state) => state.position\n    })\n  },\n  methods: {\n    openDialog(question) {\n      console.log(question)\n      this.currentQuestion = question\n      this.starRating = 0  // reset rating\n      this.dialog = true\n    },\n    openMapDialog(question) {\n      console.log(question)\n      this.currentQuestion = question\n      this.markers = []\n      this.mapDialog = true\n    },    \n    addMarker(event) {\n      const marker = {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      };\n      this.markers.pop() // Only one marker allowed\n      this.markers.push({ position: marker })\n    },\n    async submitDialog(type) {\n      console.log('submitDialog')\n\n      const token = await this.$auth.getTokenSilently();\n      const url = `${this.$APIurl}/answers`\n      this.saving = true\n\n      // Build payload for star/geo type questions\n      let payload = {\n        question: this.question,\n        type\n      }\n\n      if (type === 'star') {\n        payload.rating = this.starRating\n      } else {\n        payload.lat = this.markers[0].position.lat\n        payload.lng = this.markers[0].position.lng\n      }\n\n      console.log('Payload: ', payload)\n      try {\n        const { data } = await axios.post(url, payload,\n          {\n            headers: { \n              Authorization: `Bearer ${token}`\n            }\n          })\n        console.log('Result: ', data) \n      } catch (err) {\n        console.error('Error: ', err)\n      }\n\n      this.dialog = false\n      this.mapDialog = false\n      this.saving = false\n    }\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}