{"remainingRequest":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/duyennguyen/STREAMING/ask-around-me/frontend/src/views/Answers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/src/views/Answers.vue","mtime":1626863039992},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyIKY29uc3QgZ2VvaGFzaCA9IHJlcXVpcmUoJ25nZW9oYXNoJykKY29uc3QgaWdub3JlID0gWydhbnN3ZXJzJywndG90YWxTY29yZScsJ2dlb2hhc2gnLCdxdWVzdGlvbicsJ2dlb0pzb24nLCdoYXNoS2V5JywnY3JlYXRlZCcsJ3JhbmdlS2V5JywndHlwZScsJ3N0YXRlJywnYXV0aG9yJ10KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQW5zd2VycyIsCiAgY29tcG9uZW50czogewogIH0sCiAgZGF0YTogZnVuY3Rpb24gKCkgeyAgIAogICAgcmV0dXJuIHsKICAgICAgY3VycmVudExhdDogNDAuNzM1ODIzNSwKICAgICAgcGFyZW50SGVpZ2h0OiA2MDAsCiAgICAgIGN1cnJlbnRMbmc6IC03My45OTI3MTAyLAogICAgICBsb2FkaW5nOiB0cnVlLCAgICAgICAgCiAgICAgIGhrOiBudWxsLAogICAgICByazogbnVsbCwKICAgICAgYmxvY2tzOltdCiAgICB9CiAgfSwKICBhc3luYyBtb3VudGVkICgpIHsKICAgIGNvbnNvbGUubG9nKCdtb3VudGVkJykKICAgIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlLnF1ZXJ5KQogICAgdGhpcy5oayA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmhrCiAgICB0aGlzLnJrID0gdGhpcy4kcm91dGUucXVlcnkucmsKICAgIHRoaXMucGFyZW50SGVpZ2h0ID0gdGhpcy4kcGFyZW50LiRlbC5vZmZzZXRIZWlnaHQ7ICAgICAgCiAgICBpZiAodGhpcy5oayAmJiB0aGlzLnJrKSBhd2FpdCB0aGlzLmxvYWRBbnN3ZXJzKCkKICAgIAogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgbG9hZEFuc3dlcnMoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdsb2FkQW5zd2VycyBjYWxsZWQnKQoKICAgICAgY29uc3QgdXJsID0gYCR7dGhpcy4kQVBJdXJsfS9nZW9RdWVzdGlvbj9oaz0ke3RoaXMuaGt9JnJrPSR7dGhpcy5ya31gCiAgICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCk7CiAgICAgIGNvbnNvbGUubG9nKCdVUkw6ICcsIHVybCkKICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQodXJsLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAgICAgLy8gc2VuZCB0aGUgYWNjZXNzIHRva2VuIHRocm91Z2ggdGhlICdBdXRob3JpemF0aW9uJyBoZWFkZXIKICAgICAgICB9CiAgICAgIH0pCiAgICAgIGNvbnNvbGUubG9nKCdSZXNwb25zZTogJywgZGF0YSkKCiAgICAgIGNvbnN0IHF1ZXN0aW9uTG9jID0gKEpTT04ucGFyc2UoZGF0YS5nZW9Kc29uLlMpKS5jb29yZGluYXRlcwogICAgICB0aGlzLmN1cnJlbnRMbmcgPSBxdWVzdGlvbkxvY1swXQogICAgICB0aGlzLmN1cnJlbnRMYXQgPSBxdWVzdGlvbkxvY1sxXQoKICAgICAgLy8gUmVtb3ZlIG5vbi1oYXNoIGF0dHJpYnMgZnJvbSByZXNwb25zZQogICAgICBpZ25vcmUubWFwKChhdHRyaWIpID0+IGRlbGV0ZSBkYXRhW2F0dHJpYl0pCgogICAgICAvLyBHZXQgdG90YWxWb3RlcwogICAgICBsZXQgdG90YWxWb3RlcyA9IDAKICAgICAgZm9yIChsZXQgaGFzaCBpbiBkYXRhKSB7CiAgICAgICAgdG90YWxWb3RlcyArPSBwYXJzZUludChkYXRhW2hhc2hdLk4pCiAgICAgIH0KCiAgICAgIC8vIFJldHVybnMgZ3JhZGllbnQgZm9yIHZhbHVlIG9mIDAtMQogICAgICBmdW5jdGlvbiBnZXRDb2xvcih2YWx1ZSl7CiAgICAgICAgbGV0IGh1ZT0oKDEtdmFsdWUpKjI0MCkKICAgICAgICByZXR1cm4gYGhzbCgke2h1ZX0sMTAwJSw1MCUpYAogICAgICB9CgogICAgICAvLyBTZXQgY29sb3IKICAgICAgZm9yIChsZXQgaGFzaCBpbiBkYXRhKSB7CiAgICAgICAgZGF0YVtoYXNoXS5wZXJjZW50ID0gZGF0YVtoYXNoXS5OIC8gdG90YWxWb3RlcwogICAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGFbaGFzaF0uTiwgdG90YWxWb3RlcykKICAgICAgICBkYXRhW2hhc2hdLmNvbG9yID0gZ2V0Q29sb3IoZGF0YVtoYXNoXS5wZXJjZW50KQogICAgICB9CgogICAgICAvLyBHZXQgZ2VvaGFzaGVzCiAgICAgIGZvciAobGV0IGhhc2ggaW4gZGF0YSkgewogICAgICAgIGNvbnN0IGNvb3JkcyA9IGdlb2hhc2guZGVjb2RlX2Jib3goaGFzaCkKCiAgICAgICAgLy8gTWFwcyBib3VuZHMgbG9naWM6IGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL21hcHMvZG9jdW1lbnRhdGlvbi9qYXZhc2NyaXB0L3JlZmVyZW5jZS9jb29yZGluYXRlcyNMYXRMbmdCb3VuZHNMaXRlcmFsCiAgICAgICAgdGhpcy5ibG9ja3MucHVzaCh7CiAgICAgICAgICBub3J0aDogY29vcmRzWzBdLAogICAgICAgICAgc291dGg6IGNvb3JkcyBbMl0sCiAgICAgICAgICBlYXN0OiBjb29yZHNbM10sCiAgICAgICAgICB3ZXN0OiBjb29yZHNbMV0sCiAgICAgICAgICBjb2xvcjogZGF0YVtoYXNoXS5jb2xvciwKICAgICAgICAgIHBjdDogZGF0YVtoYXNoXS5wZXJjZW50LAogICAgICAgICAgY2VudGVyOiB7CiAgICAgICAgICAgIGxhdDogKGNvb3Jkc1swXStjb29yZHNbMl0pLzIsCiAgICAgICAgICAgIGxuZzogKGNvb3Jkc1sxXStjb29yZHNbM10pLzIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSkKCiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICB9CgogIH0KfQo="},{"version":3,"sources":["Answers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"Answers.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\n  <v-container class=\"pa-0 ma-0\">\n\n    <!-- Loading spinner -->\n    <v-container v-if=\"loading\" >\n      <div class=\"text-center\">\n        <v-progress-circular\n          :size=\"50\"\n          color=\"orange\"\n          indeterminate\n        ></v-progress-circular>        \n      </div>  \n    </v-container>\n\n    <!-- Questions list for authenticated users -->\n    <v-container class=\"pa-0 ma-0\" id=\"answersMap\" v-if=\"!loading\">\n\n      <GmapMap\n          :center=\"{lat:this.currentLat, lng:this.currentLng}\"\n          :zoom=\"7\"\n          map-type-id=\"roadmap\"\n          style=\"width: 100%; height: 80vh;\"\n          :options=\"{\n            zoomControl: true,\n            zoom: 11,\n            mapTypeControl: false,\n            scaleControl: false,\n            streetViewControl: false,\n            rotateControl: false,\n            fullscreenControl: false,\n            disableDefaultUI: false\n          }\"\n        > \n          <!-- <GmapRectangle \n            :key=\"index\"\n            v-for=\"(m, index) in blocks\"\n            :bounds=\"{north: m.north, south: m.south, east: m.east, west: m.west}\"\n            :options=\"{\n              fillColor: m.color,\n              fillOpacity: .6,\n              strokeColor: m.color,\n              strokeOpacity: .1,\n              strokeWeight: 1\n            }\"            \n          /> -->\n          <GmapCircle\n            :key=\"index\"\n            v-for=\"(m, index) in blocks\"\n            :center=\"{lat: m.center.lat, lng: m.center.lng}\"\n            :radius=\"(250+(1500*m.pct))\"\n            :options=\"{\n              fillColor: m.color,\n              fillOpacity: 0.8,\n              strokeColor: m.color,\n              strokeOpacity: 0.8,\n              strokeWeight: 2\n            }\"\n          />          \n          <GmapCircle\n            :center=\"{lat: currentLat, lng: currentLng}\"\n            :radius=\"8000\"\n            :options=\"{\n              fillColor:'blue',\n              fillOpacity:0.1,\n              strokeColor: '#0000FF',\n              strokeOpacity: 0.2,\n              strokeWeight: 5\n            }\"\n          />\n        </GmapMap>     \n\n    </v-container>\n\n    <!-- Back icon -->\n    <v-container class=\"pa-0 ma-0\">\n      <v-btn \n        v-if=\"$auth.isAuthenticated\" \n        fixed\n        dark\n        fab\n        bottom\n        right\n        color=\"gray\"\n        class=\"mb-4\"\n        to=\"/\">\n        <v-icon>arrow_back</v-icon>\n      </v-btn>\n    </v-container>    \n\n  </v-container>\n</template>\n\n<script>\n  import axios from \"axios\"\n  const geohash = require('ngeohash')\n  const ignore = ['answers','totalScore','geohash','question','geoJson','hashKey','created','rangeKey','type','state','author']\n\n  export default {\n    name: \"Answers\",\n    components: {\n    },\n    data: function () {   \n      return {\n        currentLat: 40.7358235,\n        parentHeight: 600,\n        currentLng: -73.9927102,\n        loading: true,        \n        hk: null,\n        rk: null,\n        blocks:[]\n      }\n    },\n    async mounted () {\n      console.log('mounted')\n      console.log(this.$route.query)\n      this.hk = this.$route.query.hk\n      this.rk = this.$route.query.rk\n      this.parentHeight = this.$parent.$el.offsetHeight;      \n      if (this.hk && this.rk) await this.loadAnswers()\n      \n    },\n    methods: {\n      async loadAnswers() {\n        console.log('loadAnswers called')\n\n        const url = `${this.$APIurl}/geoQuestion?hk=${this.hk}&rk=${this.rk}`\n        const token = await this.$auth.getTokenSilently();\n        console.log('URL: ', url)\n        const { data } = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`    // send the access token through the 'Authorization' header\n          }\n        })\n        console.log('Response: ', data)\n\n        const questionLoc = (JSON.parse(data.geoJson.S)).coordinates\n        this.currentLng = questionLoc[0]\n        this.currentLat = questionLoc[1]\n\n        // Remove non-hash attribs from response\n        ignore.map((attrib) => delete data[attrib])\n\n        // Get totalVotes\n        let totalVotes = 0\n        for (let hash in data) {\n          totalVotes += parseInt(data[hash].N)\n        }\n\n        // Returns gradient for value of 0-1\n        function getColor(value){\n          let hue=((1-value)*240)\n          return `hsl(${hue},100%,50%)`\n        }\n\n        // Set color\n        for (let hash in data) {\n          data[hash].percent = data[hash].N / totalVotes\n          // console.log(data[hash].N, totalVotes)\n          data[hash].color = getColor(data[hash].percent)\n        }\n\n        // Get geohashes\n        for (let hash in data) {\n          const coords = geohash.decode_bbox(hash)\n\n          // Maps bounds logic: https://developers.google.com/maps/documentation/javascript/reference/coordinates#LatLngBoundsLiteral\n          this.blocks.push({\n            north: coords[0],\n            south: coords [2],\n            east: coords[3],\n            west: coords[1],\n            color: data[hash].color,\n            pct: data[hash].percent,\n            center: {\n              lat: (coords[0]+coords[2])/2,\n              lng: (coords[1]+coords[3])/2\n            }\n          })\n        }\n          // console.log(data)\n\n        this.loading = false\n      }\n\n    }\n  }\n</script>\n"]}]}