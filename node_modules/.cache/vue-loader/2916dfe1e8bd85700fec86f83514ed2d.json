{"remainingRequest":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/duyennguyen/STREAMING/ask-around-me/frontend/src/views/HomeView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/src/views/HomeView.vue","mtime":1626863039993},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/duyennguyen/STREAMING/ask-around-me/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyIKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JwppbXBvcnQgeyBidXMgfSBmcm9tICcuLi9tYWluJwppbXBvcnQgUXVlc3Rpb24gZnJvbSAnQC9jb21wb25lbnRzL1F1ZXN0aW9uLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSG9tZVZpZXciLAogIGNvbXBvbmVudHM6IHsKICAgIFF1ZXN0aW9uCiAgfSwKICBkYXRhOiBmdW5jdGlvbiAoKSB7ICAgCiAgICByZXR1cm4gewogICAgICBjdXJyZW50TGF0OiA0MC43MzU4MjM1LAogICAgICBjdXJyZW50TG5nOiAtNzMuOTkyNzEwMiwKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgdXNlcjogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsncXVlc3Rpb25zJ10pCiAgfSwKICBtb3VudGVkICgpIHsKICAgIGNvbnNvbGUubG9nKCdtb3VudGVkJykKICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oKHBvc2l0aW9uKSA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCdQb3NpdGlvbiByZXR1cm5lZDogJywgcG9zaXRpb24pCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0UG9zaXRpb24nLCBwb3NpdGlvbikKICAgICAgdGhpcy5jdXJyZW50TGF0ID0gcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlCiAgICAgIHRoaXMuY3VycmVudExuZyA9IHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGUKICAgICAgdGhpcy51cGRhdGVSZXN1bHRzKCkKICAgIH0sICgpID0+IHsKICAgICAgY29uc29sZS5sb2coJ0Vycm9yOiBUaGUgR2VvbG9jYXRpb24gc2VydmljZSBmYWlsZWQuJykKICAgIH0sIHsKICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5OiB0cnVlLAogICAgICB0aW1lb3V0OiAzMDAwMAogICAgfSkKICB9LAogIGNyZWF0ZWQgKCkgewogICAgYnVzLiRvbignYXV0aGVudGljYXRlZCcsIGFzeW5jICh1c2VyKSA9PiB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0VXNlcicsIHVzZXIpCiAgICAgIGNvbnNvbGUubG9nKCdVc2VyIHNpZ25lZCBpbjogJywgdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRVc2VyKQoKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyB1cGRhdGVSZXN1bHRzKCkgewogICAgICBpZiAoIXRoaXMuJHN0b3JlLmdldHRlcnMuaXNJbml0aWFsaXplZCkgcmV0dXJuCiAgICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCkKCiAgICAgIC8vIE9ubHkgdXNlIHRoaXMgbGluZSBmb3IgZGVidWdnaW5nISBJdCBkaXNwbGF5cyB0aGUgSldUIHRva2VuIGluIHRoZSBicm93c2VyIGNvbnNvbGUuCiAgICAgIC8vIGNvbnNvbGUubG9nKHRva2VuKQogICAgICBjb25zdCB1cmwgPSBgJHt0aGlzLiRBUEl1cmx9L3F1ZXN0aW9ucz9sYXQ9JHt0aGlzLmN1cnJlbnRMYXR9JmxuZz0ke3RoaXMuY3VycmVudExuZ31gCiAgICAgIGNvbnNvbGUubG9nKCdVUkw6ICcsIHVybCkKICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQodXJsLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAgICAgLy8gc2VuZCB0aGUgYWNjZXNzIHRva2VuIHRocm91Z2ggdGhlICdBdXRob3JpemF0aW9uJyBoZWFkZXIKICAgICAgICB9CiAgICAgIH0pCiAgICAgIGNvbnNvbGUubG9nKCdSZXNwb25zZTogJywgZGF0YSkKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRBbGxRdWVzdGlvbnMnLCBkYXRhKQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgfQogIH0KfQo="},{"version":3,"sources":["HomeView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HomeView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container class=\"pa-0 ma-0\">\n\n    <!-- Intro screen for unauthenticated users -->\n    <div id=\"unauth-view\" v-if=\"!$auth.isAuthenticated\">\n      <v-card class=\"ma-2\">\n        <v-list-item>\n          <v-list-item-avatar color=\"grey\"></v-list-item-avatar>\n          <v-list-item-content>\n            <v-list-item-title class=\"headline\">Welcome!</v-list-item-title>\n            <v-list-item-subtitle>Share local knowledge</v-list-item-subtitle>\n          </v-list-item-content>\n        </v-list-item>\n    \n        <v-img\n          src=\"@/assets/overview.jpg\"\n          height=\"194\"\n        ></v-img>\n    \n        <v-card-text>\n          Who serves the best coffee? Where's the best local park? Get the answers to these questions and more from a local audience!\n        </v-card-text>\n    \n        <v-card-actions>\n          <v-btn text color=\"orange\" href=\"https://bit.ly/askaroundme\"  target=\"_blank\">\n            Learn more\n          </v-btn>\n          <v-btn text color=\"orange\" href=\"https://github.com/aws-samples/ask-around-me/\"  target=\"_blank\">\n            GitHub\n          </v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </div>\n\n    <!-- Questions list for authenticated users -->\n    <v-container class=\"pa-0 ma-0\" id=\"auth-view\" v-if=\"$auth.isAuthenticated\">\n      <GmapMap\n        :center=\"{lat:this.currentLat, lng:this.currentLng}\"\n        :zoom=\"7\"\n        map-type-id=\"roadmap\"\n        style=\"width: 100%; height: 300px\"\n        :options=\"{\n          zoomControl: true,\n          zoom: 11,\n          mapTypeControl: false,\n          scaleControl: false,\n          streetViewControl: false,\n          rotateControl: false,\n          fullscreenControl: false,\n          disableDefaultUI: false\n        }\"\n      > \n        <GmapMarker\n          :key=\"index\"\n          v-for=\"(m, index) in questions\"\n          :position=\"{lat: m.latitude, lng: m.longitude}\"\n          :clickable=\"false\"\n          :draggable=\"false\"\n          @click=\"center=m.position\"\n        />\n        <GmapCircle\n          :center=\"{lat: currentLat, lng: currentLng}\"\n          :radius=\"8000\"\n          :options=\"{\n            fillColor:'blue',\n            fillOpacity:0.1,\n            strokeColor: '#0000FF',\n            strokeOpacity: 0.2,\n            strokeWeight: 5\n          }\"\n        />\n      </GmapMap>     \n    </v-container>\n\n    <!-- Loading spinner -->\n    <v-container v-if=\"$auth.isAuthenticated && loading\" >\n      <div class=\"text-center\">\n        <v-progress-circular\n          :size=\"50\"\n          color=\"orange\"\n          indeterminate\n        ></v-progress-circular>        \n      </div>  \n    </v-container>\n\n    <!-- No questions - prompt user to ask one -->\n    <v-container v-if=\"questions.length === 0 && !loading\" >\n      <v-card class=\"ma-2\">\n        <v-card-title class=\"headline\">No questions here</v-card-title>\n        <v-card-subtitle>Whoa! This is a quiet neighborhood. Be the first to ask a question.</v-card-subtitle>\n        <v-card-actions>\n          <v-btn color=\"orange\" text>Ask question</v-btn>\n        </v-card-actions>\n      </v-card>    \n    </v-container>\n    <v-container class=\"pa-0 ma-0\" v-if=\"questions.length > 0\">\n      <v-container class=\"pa-0 ma-0\" v-bind:key=\"index\" v-for=\"(question, index) in questions\">\n        <Question v-bind:question=\"question\"/>\n      </v-container>\n    </v-container>\n\n    <!-- Add question icon -->\n    <v-container class=\"pa-0 ma-0\">\n      <v-btn \n        v-if=\"$auth.isAuthenticated\" \n        fixed\n        dark\n        fab\n        bottom\n        right\n        color=\"red\"\n        class=\"mb-4\"\n        to=\"/ask\">\n        <v-icon>add</v-icon>\n      </v-btn>\n    </v-container>\n  </v-container>\n</template>\n\n<script>\n  import axios from \"axios\"\n  import { mapState } from 'vuex'\n  import { bus } from '../main'\n  import Question from '@/components/Question.vue'\n\n  export default {\n    name: \"HomeView\",\n    components: {\n      Question\n    },\n    data: function () {   \n      return {\n        currentLat: 40.7358235,\n        currentLng: -73.9927102,\n        loading: true,\n        user: null\n      }\n    },\n    computed: {\n      ...mapState(['questions'])\n    },\n    mounted () {\n      console.log('mounted')\n      navigator.geolocation.getCurrentPosition((position) => {\n        console.log('Position returned: ', position)\n        this.$store.commit('setPosition', position)\n        this.currentLat = position.coords.latitude\n        this.currentLng = position.coords.longitude\n        this.updateResults()\n      }, () => {\n        console.log('Error: The Geolocation service failed.')\n      }, {\n        enableHighAccuracy: true,\n        timeout: 30000\n      })\n    },\n    created () {\n      bus.$on('authenticated', async (user) => {\n        this.$store.commit('setUser', user)\n        console.log('User signed in: ', this.$store.getters.getUser)\n\n      })\n    },\n    methods: {\n      async updateResults() {\n        if (!this.$store.getters.isInitialized) return\n        const token = await this.$auth.getTokenSilently()\n\n        // Only use this line for debugging! It displays the JWT token in the browser console.\n        // console.log(token)\n        const url = `${this.$APIurl}/questions?lat=${this.currentLat}&lng=${this.currentLng}`\n        console.log('URL: ', url)\n        const { data } = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`    // send the access token through the 'Authorization' header\n          }\n        })\n        console.log('Response: ', data)\n        this.$store.commit('setAllQuestions', data)\n        this.loading = false\n      }\n    }\n  }\n</script>\n"]}]}